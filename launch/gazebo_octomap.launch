<launch>

    <node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
        <!-- resolution in meters per pixel -->
        <param name="resolution" value="0.02" />
        <!-- name of the fixed frame, needs to be "/map" for SLAM -->
        <param name="frame_id" type="string" value="/world" />
        <param name="sensor_model/max_range" value="10"/>
        <!-- <param name="latch" value="true" /> -->
        <!-- max/min height for occupancy map, should be in meters -->
        <param name="pointcloud_max_x" value="100" />
        <param name="pointcloud_min_x" value="-100" />
        <param name="pointcloud_max_y" value="100" />
        <param name="pointcloud_min_y" value="-100" />
        <param name="pointcloud_max_z" value="100" />
        <param name="pointcloud_min_z" value="-0.3" />

        <param name="occupancy_min_z" value="0.05" />
        <!-- This gives an error -->
        <!-- <param name="filter_ground" value="true" /> --> 

        <!-- topic from where pointcloud2 messages are subscribed -->
        <!-- <remap from="/cloud_in" to="/camera/depth_registered/points" /> -->
        <remap from="/cloud_in" to="/camera/depth/points" />
        <!-- <remap from="/cloud_in" to="/depth_filtered_cloud" /> -->
        
    </node>
<!-- 
    <node pkg="floor_octomap" type="modify_octomap_node" name="modify_octomap" output="screen">
        <rosparam command="load" file="$(find floor_octomap)/config/flatten.yaml" />
    </node> -->

    <node pkg="floor_octomap" type="flatten_octomap_service.py" name="flatten_octomap_service" output="screen" />

    <!-- <node type="rviz" name="rviz" pkg="rviz" args="-d $(find floor_octomap )/rviz_config.rviz" /> -->


    <!-- STATIC TRANSFORM PUBLISHER -->
    <!-- static_transform_publisher x y z qx qy qz qw frame_id child_frame_id  period_in_ms -->
    <!-- rosrun tf static_transform_publisher 1.0 0 1.0 0 0 0 1 world base_link 100 -->

    <!-- world ~ base_link -->
    <!-- For bag -->
    <node pkg="tf" type="static_transform_publisher" name="world_to_baselink_tf_pub" args="1 0 0.64 0 0 0 1 world base_link 100" />
  
    <!-- base_link ~ camera_link -->
    <!-- 0 Degree -->
    <!-- <node pkg="tf" type="static_transform_publisher" name="baselink_to_camera_tf_pub" args=" 0 0 0.5 0 0 0 1 base_link camera_link 100" /> -->
    <!-- 45 Degree -->
    <!-- <node pkg="tf" type="static_transform_publisher" name="baselink_to_camera_tf_pub" args=" 0 0 0.5 0 0.383 0 0.924 base_link camera_link 100" /> -->
    <!-- 30 Degree "hubo_v1" -->
    <node pkg="tf" type="static_transform_publisher" name="baselink_to_camera_tf_pub" args=" 0 0 0.5 0 0.309 0 0.951 base_link camera_link 100" />
    <!-- 90 Degree -->
    <!-- <node pkg="tf" type="static_transform_publisher" name="baselink_to_camera_tf_pub" args=" 0 0 0.5 0 0.707 0 0.707 base_link camera_link 100" /> -->
    <!-- 88.5 Degree "test_v3.bag" -->
    <!-- <node pkg="tf" type="static_transform_publisher" name="baselink_to_camera_tf_pub" args=" 0 0 0.5 0 0.698 0 0.716 base_link camera_link 100" /> -->
    <!-- 53.6 Degree "test_v4.bag" -->
    <!-- <node pkg="tf" type="static_transform_publisher" name="baselink_to_camera_tf_pub" args=" 0 0 0.65 0 0.451 0 0.893 base_link camera_link 100" /> -->
    <!-- 40 Degree "test_v5.bag" -->
    <!-- <node pkg="tf" type="static_transform_publisher" name="baselink_to_camera_tf_pub" args=" 0 0 0.5 0 0.423 0 0.906 base_link camera_link 100" /> -->
    

    <!-- RUN DVO SLAM -->
    <node pkg="dvo_ros" type="camera_tracker" name="dvo_slam_node" output="screen">
        <param name="run_dense_tracking" value="True"/>
        <param name="use_initial_estimate" value="False"/>
        <param name="use_weighting" value="True"/>
    </node>


    <!-- FILTER DEPTH IMAGE ON DEPTH -->
    <!-- <node pkg="floor_octomap" type="tf_alias_node.py" name="tf_alias" output="screen" 
            args="/base_link_estimate /camera_depth_optical_frame_estimate /base_link /camera_depth_optical_frame"/> -->

</launch>